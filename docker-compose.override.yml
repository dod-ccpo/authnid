version: '3'
services:
  db:
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
  pgadmin:
    image: fenglc/pgadmin4
    depends_on:
      - db
    environment:
      - DEFAULT_USER=admin@cac.atat.codes
      - DEFAULT_PASSWORD=NXUJHjedjb7CXx[M
    ports:
      - '5050:5050'
  swagger-ui:
    image: swaggerapi/swagger-ui
    labels:
      - traefik.frontend.rule=PathPrefixStrip:/swagger/
      - traefik.enable=true
      - traefik.port=8080
      - traefik.tags=${TRAEFIK_TAG}
    environment:
      - API_URL=http://${DOMAIN}/api/v1/swagger/
  proxy:
    image: traefik:v1.5
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --docker \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=DEBUG \
      --accessLog \
      --web
    labels:
      - traefik.frontend.rule=Host:${DOMAIN}
      - traefik.enable=true
      - traefik.port=80

    ports:
      - '80:80'
      - '8080:8080'
  flower:
    image: totem/celery-flower-docker
    environment:
      - FLOWER_BASIC_AUTH=root:changethis
    ports:
      - '5555:5555'
  backend:
    build:
      context: ./backend
      args:
        env: dev
    labels:
      - traefik.frontend.rule=PathPrefix:/api
      - traefik.enable=true
      - traefik.port=80
      - traefik.tags=${TRAEFIK_TAG}
    networks:
      default:
        aliases:
          - ${DOMAIN}
    volumes:
      - './backend/app:/app'
      # For Hydrogen Jupyter easy integration with
      # docker-compose exec server
      # and
      # jupyter notebook --ip=0.0.0.0 --allow-root
      - '~/.jupyter:/root/.jupyter'
    environment:
      - FLASK_APP=app/main.py
      - FLASK_DEBUG=1
      - 'RUN=flask run --host=0.0.0.0 --port=80'
      - 'JUPYTER=jupyter notebook --ip=0.0.0.0 --allow-root'
    # command: bash -c "while true; do sleep 1; done"
    command: bash -c "flask run --host=0.0.0.0 --port=80"
  celeryworker:
    build:
      context: ./backend
      dockerfile: Dockerfile-celery-worker
      args:
        env: dev
    environment:
      - RUN=celery worker -A app.worker -l info -Q main-queue -c 1
      - JUPYTER=jupyter notebook --ip=0.0.0.0 --allow-root
    volumes:
      - ./backend/app:/app
      # For Hydrogen Jupyter easy integration with
      # docker-compose exec server
      # and
      # jupyter notebook --ip=0.0.0.0 --allow-root
      - ~/.jupyter:/root/.jupyter
  backend-tests:
    build:
      context: ./backend
      dockerfile: Dockerfile-tests
      args:
        env: dev
    environment:
      - JUPYTER=jupyter notebook --ip=0.0.0.0 --allow-root
      - SERVER_NAME=${DOMAIN}
      # - SEED=0
    command: bash -c "while true; do sleep 1; done"
    volumes:
      - ./backend/app:/app
      # For Hydrogen Jupyter easy integration with
      # docker-compose exec server
      # and
      # jupyter notebook --ip=0.0.0.0 --allow-root
      - ~/.jupyter:/root/.jupyter
    ports:
      - '8888:8888'

volumes:
  app-db-data:
