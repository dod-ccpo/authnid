version: '3'
services:
  db:
    volumes:
      - app-db-data:/var/lib/postgresql/data/pgdata
    deploy:
      placement:
        constraints:
          - node.labels.${STACK_NAME}.app-db-data == true
  pgadmin:
    deploy:
      labels:
        - traefik.frontend.rule=Host:pgadmin.${DOMAIN}
        - traefik.enable=true
        - traefik.port=5050
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
    networks:
      - traefik-public
      - default
  swagger-ui:
    deploy:
      labels:
      - traefik.frontend.rule=PathPrefixStrip:/swagger/
      - traefik.enable=true
      - traefik.port=8080
      - traefik.tags=${TRAEFIK_TAG}
    environment:
      - API_URL=https://${DOMAIN}/api/v1/swagger/
  proxy:
    command: --docker \
      --docker.swarmmode \
      --docker.watch \
      --docker.exposedbydefault=false \
      --constraints=tag==${TRAEFIK_TAG} \
      --logLevel=DEBUG \
      --accessLog \
      --web
    deploy:
      placement:
        constraints:
          - node.role == manager
      labels:
        # For the configured domain
        - traefik.frontend.rule=Host:${DOMAIN}
        # For a domain with and without 'www'
        # Comment the previous line above and un-comment the line below
        # - "traefik.frontend.rule=Host:www.${DOMAIN},${DOMAIN}"
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.servicehttp.frontend.entryPoints=http
        - traefik.servicehttp.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.servicehttps.frontend.entryPoints=https
        # Uncomment the config line below to detect and redirect www to non-www (or the contrary)
        # The lines above for traefik.frontend.rule are needed too
        # - "traefik.servicehttps.frontend.redirect.regex=^https?://(www.)?(${DOMAIN})/(.*)"
        # To redirect from non-www to www un-comment the line below
        # - "traefik.servicehttps.frontend.redirect.replacement=https://www.${DOMAIN}/$$3"
        # To redirect from www to non-www un-comment the line below
        # - "traefik.servicehttps.frontend.redirect.replacement=https://${DOMAIN}/$$3"
    networks:
      - traefik-public
      - default
  flower:
    deploy:
      labels:
        - traefik.frontend.rule=Host:flower.${DOMAIN}
        - traefik.enable=true
        - traefik.port=5555
        - traefik.tags=${TRAEFIK_PUBLIC_TAG}
        - traefik.docker.network=traefik-public
        # Traefik service that listens to HTTP
        - traefik.redirectorservice.frontend.entryPoints=http
        - traefik.redirectorservice.frontend.redirect.entryPoint=https
        # Traefik service that listens to HTTPS
        - traefik.webservice.frontend.entryPoints=https
    networks:
      - traefik-public
      - default
  backend:
    deploy:
      labels:
        - traefik.frontend.rule=PathPrefix:/api
        - traefik.enable=true
        - traefik.port=80
        - traefik.tags=${TRAEFIK_TAG}

volumes:
  app-db-data:

networks:
  traefik-public:
    external: true
